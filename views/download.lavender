extends layouts/default

-current_page = "Download"

block title
  | Download - Lavender Templating Engine for PHP

block content
  .container
    div.col-md-8.col-md-offset-3
      .guide.img-rounded
        h1.title Download Lavender
        p
          | We don't need no stinkin' manual...
        p
          | I want to download Lavender now!
        h3 Download Lavender
        p
          | You can download Lavender from its
          a(
            href='https://github.com/golavender/lavender', 
            target='_blank'
            ) github repository
          |. 
        h3 Installation
          h2#composer via composer
          p
            | First, get yourself some 
            a(
              href='https://getcomposer.org/doc/00-intro.md#installation-nix', 
              target='_blank'
            ) composer.
            |  Next, you need to make yourself a
            code.language-markup composer.json
            | . Here's an example:
            pre
              code.language-markup.
                {
                  'require': {
                    'lavender/lavender': '*'
                  }
                }
            | then run
            code.language-markup php composer.phar install 
            | or
            code.language-markup composer install
            | depending on how you've installed composer. Once composer has finished 
            |it will generate an autoloader in 
            code.language-markup vendor/autoload.php
            | which you can 
            code.language-markup require()
            | from your application's bootstrap process.
          h2#github via Github      
          p
            | Add the lavender submodule with: 
            code.language-markup git submodule add git@github.com:golavender/lavender.git (folder to 
            | clone to) and include it with: 
            code.language-markup require '(where you put lavender)/src/Lavender/lavender.php'
        h3#usage Usage
        p
          | Once you have installed and included lavender, the only required
          | configuration is to tell lavender where the views directory is.
          pre
            code.language-jade.
              Lavender::config(array(

              /*
               * required - path to views directory
               */
              'view_dir'       => String,

              /*
              * optional - defaults to 'lavender'
              */
              //'file_extension' => String,

              /*
              * optional - defaults to TRUE
              *
              * renders a debugging error page instead of throwing an exception.
              * in production you should disable this and use a 500 page.
              */
              //'handle_errors'  => Boolean, 
              ));
          | once it's been rendered, it's as easy as...
          pre
            code.language-jade.
              $output = Lavender::view('some_template')->compile();

              // or if you need to pass data into the template (probably the case)

              $output = Lavender::view('some_template')->compile(array(
                'data'      => 'some data that the template will use',
                'more_data' => 'moar data',
              ));
